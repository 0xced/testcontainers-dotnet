name: $(date:yyyyMMdd)$(rev:.r)

variables:
  dotNetCoreVersion: 2.2.104

jobs:
- job: 'Build'
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: DotNetCoreInstaller@0
    displayName: 'Use .NET Core SDK $(dotNetCoreVersion)'
    inputs:
      version: $(dotNetCoreVersion)

  - powershell: |
      # Disable dotnet cli telemetry
      $env:DOTNET_CLI_TELEMETRY_OPTOUT=1
      # Set environment variables
      echo "##vso[task.setvariable variable=sonarcloudUrl;]$(sonarcloud.url)"
      echo "##vso[task.setvariable variable=sonarcloudKey;]$(sonarcloud.key)"
      echo "##vso[task.setvariable variable=sonarcloudToken;]$(sonarcloud.token)"
      echo "##vso[task.setvariable variable=sonarcloudOrganization;]$(sonarcloud.organization)"
      echo "##vso[task.setvariable variable=nuGetSource;]$(feed.source)"
      echo "##vso[task.setvariable variable=nuGetApiKey;]$(feed.apikey)"
      # Set Docker configuration, until Unix containers are supported native
      Net stop docker
      @{experimental=$true} | ConvertTo-Json | Out-File -FilePath C:\ProgramData\Docker\config\daemon.json
      Net start docker
      docker pull --platform linux alpine:latest
      docker pull --platform linux nginx:latest
      # Prepare build
      ./build.ps1 --target=Restore-NuGet-Packages
    displayName: 'Prepare'

  - powershell: ./build.ps1 --target=Build
    displayName: 'Build'

  - powershell: ./build.ps1 --target=Test
    displayName: 'Test'

  - powershell: ./build.ps1 --target=Sonar
    displayName: 'Sonar'
    env:
      SONARQUBE_URL: $(sonarcloudUrl)
      SONARQUBE_KEY: $(sonarcloudKey)
      SONARQUBE_TOKEN: $(sonarcloudToken)
      SONARQUBE_ORGANIZATION: $(sonarcloudOrganization)

  - powershell: ./build.ps1 --target=Publish
    displayName: 'Publish'
    env:
      NUGET_SOURCE: $(nuGetSource)
      NUGET_APIKEY: $(nuGetApiKey)
