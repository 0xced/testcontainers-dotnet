{%              if GenerateNullableReferenceTypes -%}
private static string ConvertToString(object? value, CultureInfo cultureInfo)
{%              else -%}
private static string ConvertToString(object value, CultureInfo cultureInfo)
{%              endif -%}
{
    if (value == null)
    {
        return "";
    }

    if (value is Enum)
    {
        var name = Enum.GetName(value.GetType(), value);
        if (name != null)
        {
            var field = value.GetType().GetTypeInfo().GetDeclaredField(name);
            if (field != null)
            {
                var attribute = field.GetCustomAttribute<EnumMemberAttribute>();
                if (attribute != null)
                {
                    return attribute.Value ?? name;
                }
            }

            var converted = Convert.ToString(Convert.ChangeType(value, Enum.GetUnderlyingType(value.GetType()), cultureInfo));
            return converted ?? "";
        }
    }
    else if (value is bool boolean) 
    {
        return Convert.ToString(boolean, cultureInfo).ToLowerInvariant();
    }
    else if (value is byte[] bytes)
    {
        return Convert.ToBase64String(bytes);
    }
    else if (value is string[] values)
    {
        return string.Join(",", values);
    }
    else if (value is Array valueArray)
    {
        var valueTextArray = new string[valueArray.Length];
        for (var i = 0; i < valueArray.Length; i++)
        {
            valueTextArray[i] = ConvertToString(valueArray.GetValue(i), cultureInfo);
        }
        return string.Join(",", valueTextArray);
    }

    var result = Convert.ToString(value, cultureInfo);
    return result ?? "";
}
